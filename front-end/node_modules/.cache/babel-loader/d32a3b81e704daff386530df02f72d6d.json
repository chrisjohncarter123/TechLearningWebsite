{"ast":null,"code":"/*\nexport const fetchAccounts = () => {\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_ACCOUNTS'})\n      fetch('https://localhost:4000/accounts').then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON.json })\n      })\n    }\n  }\n  */\nconst accountTemplate = state => ({\n  name: state.name\n});\n\nexport const createCounter = name => {\n  // Simple POST request with a JSON body using fetch\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      counter: {\n        name: 'React POnjnnjnST Request Example'\n      }\n    })\n  };\n  fetch('http://localhost:4000/counters', requestOptions).then(response => response.json()).then(data => console.log(data));\n};\nexport const fetchAccounts = () => {\n  console.log(\"HI\");\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_ACCOUNTS'\n    });\n    fetch('http://localhost:4000/accounts').then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      console.log(responseJSON);\n      dispatch({\n        type: 'ADD_ACCOUNTS',\n        accounts: responseJSON\n      });\n    });\n  };\n};\nexport const createAccount = () => {\n  console.log(\"HI\");\n  let state = {\n    name: \"chris\"\n  };\n  let header = {\n    method: \"Post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify(accountTemplate(state))\n  };\n  return dispatch => {\n    dispatch({\n      type: 'CREATE_ACCOUNT'\n    });\n    fetch('http://localhost:4000/accounts', header).then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      console.log(responseJSON);\n      dispatch({\n        type: 'ADD_ACCOUNTS',\n        accounts: responseJSON\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/actions/fetchAccounts.js"],"names":["accountTemplate","state","name","createCounter","requestOptions","method","headers","body","JSON","stringify","counter","fetch","then","response","json","data","console","log","fetchAccounts","dispatch","type","responseJSON","accounts","createAccount","header","Accept"],"mappings":"AACA;;;;;;;;;;;;AAaC,MAAMA,eAAe,GAAIC,KAAD,KAAY;AACnCC,EAAAA,IAAI,EAAED,KAAK,CAACC;AADuB,CAAZ,CAAxB;;AAKC,OAAO,MAAMC,aAAa,GAAID,IAAD,IAAU;AACpC;AACA,QAAME,cAAc,GAAG;AACtBC,IAAAA,MAAM,EAAE,MADc;AAEtBC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFa;AAGtBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACC,MAAAA,OAAO,EAAC;AAAER,QAAAA,IAAI,EAAE;AAAR;AAAT,KAAf;AAHgB,GAAvB;AAKDS,EAAAA,KAAK,CAAC,gCAAD,EAAmCP,cAAnC,CAAL,CACKQ,IADL,CACUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADtB,EAEKF,IAFL,CAEUG,IAAI,IAAIC,OAAO,CAACC,GAAR,CAAYF,IAAZ,CAFlB;AAGD,CAVM;AAcP,OAAO,MAAMG,aAAa,GAAG,MAAM;AAEjCF,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,SAAQE,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAT,IAAAA,KAAK,CAAC,gCAAD,CAAL,CAAwCC,IAAxC,CAA6CC,QAAQ,IAAI;AACvD,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAFD,EAEGF,IAFH,CAEQS,YAAY,IAAI;AACtBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,YAAZ;AACAF,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,cAAR;AAAwBE,QAAAA,QAAQ,EAAED;AAAlC,OAAD,CAAR;AACD,KALD;AAMD,GARD;AASD,CAZM;AAcP,OAAO,MAAME,aAAa,GAAG,MAAM;AACjCP,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,MAAIhB,KAAK,GAAG;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAZ;AAEA,MAAIsB,MAAM,GAAG;AACXnB,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPmB,MAAAA,MAAM,EAAE;AAFD,KAFE;AAMXlB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeT,eAAe,CAACC,KAAD,CAA9B;AANK,GAAb;AASA,SAAQkB,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAT,IAAAA,KAAK,CAAC,gCAAD,EAAmCa,MAAnC,CAAL,CAAgDZ,IAAhD,CAAqDC,QAAQ,IAAI;AAC/D,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAFD,EAEGF,IAFH,CAEQS,YAAY,IAAI;AACtBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,YAAZ;AACAF,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,cAAR;AAAwBE,QAAAA,QAAQ,EAAED;AAAlC,OAAD,CAAR;AACD,KALD;AAMD,GARD;AASD,CAtBM","sourcesContent":["\n/*\nexport const fetchAccounts = () => {\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_ACCOUNTS'})\n      fetch('https://localhost:4000/accounts').then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON.json })\n      })\n    }\n  }\n  */\n\n const accountTemplate = (state) => ({\n  name: state.name\n\n});\n\n  export const createCounter = (name) => {\n     // Simple POST request with a JSON body using fetch\n     const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({counter:{ name: 'React POnjnnjnST Request Example' }})\n    };\n    fetch('http://localhost:4000/counters', requestOptions)\n        .then(response => response.json())\n        .then(data => console.log(data));\n  }\n\n\n\n  export const fetchAccounts = () => {\n\n    console.log(\"HI\")\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_ACCOUNTS'})\n      fetch('http://localhost:4000/accounts').then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        console.log(responseJSON)\n        dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON })\n      })\n    }\n  }\n\n  export const createAccount = () => {\n    console.log(\"HI\")\n    let state = {name:\"chris\"}\n\n    let header = {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(accountTemplate(state)),\n    };\n\n    return (dispatch) => {\n      dispatch({ type: 'CREATE_ACCOUNT'})\n      fetch('http://localhost:4000/accounts', header).then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        console.log(responseJSON)\n        dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON })\n      })\n    }\n  }\n\n\n"]},"metadata":{},"sourceType":"module"}