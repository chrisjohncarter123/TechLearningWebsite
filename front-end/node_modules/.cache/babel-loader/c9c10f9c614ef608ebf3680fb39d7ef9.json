{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/transactionsList.jsx\";\nimport React, { Component } from 'react';\nimport Account from './account';\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter, createTransaction } from '../actions/fetchAccounts';\nimport { fetchCats } from '../actions/fetchCats';\nimport CreateAccountForm from './createAccountForm';\nimport ContentHeader from './contentHeader';\nimport Transaction from './transaction';\n\nclass TransactionsList extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      transaction_from: '',\n      transaction_to: '',\n      cash: ''\n    };\n\n    this.handleOnClick = () => {\n      console.log(\"handleOnClicks\");\n      this.props.fetchTransactions();\n      console.log(this.props);\n    };\n\n    this.handleAccountFromChange = event => {\n      this.setState({\n        transaction_from: event.target.value\n      });\n    };\n\n    this.handleAccountToChange = event => {\n      this.setState({\n        transaction_to: event.target.value\n      });\n    };\n\n    this.handleCashChange = event => {\n      this.setState({\n        cash: event.target.value\n      });\n    };\n\n    this.handleCreateTransactionSubmit = event => {\n      event.preventDefault(); //this.props.dispatch({ type: 'ADD_TODO', payload: this.state });\n\n      console.log(this.state);\n      this.props.createTransaction({\n        account_from: this.state.transaction_from,\n        account_to: this.state.transaction_to,\n        cash: this.state.cash\n      });\n      this.props.fetchAccounts();\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchTransactions();\n  }\n\n  render() {\n    console.log(\"Props \"); // log will fire every time App renders\n\n    console.log(this.props.transactions.transactions);\n    let transactions = \"\";\n\n    if (this.props.transactions != undefined) {\n      transactions = this.props.transactions.transactions; // console.log(accounts[1])\n\n      transactions = this.props.transactions.transactions.map(transaction => /*#__PURE__*/React.createElement(\"div\", {\n        key: transaction.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Transaction, {\n        account_from: transaction.account_from,\n        account_to: transaction.account_to,\n        cash: transaction.cash,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 103\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 217\n        }\n      })));\n    } else {\n      transactions = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 24\n        }\n      }, \"Loading ...\");\n    }\n\n    let divStyle = {\n      color: 'black',\n      border: 'solid 2px black',\n      padding: '15px'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ContentHeader, {\n      title: \"Transactions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"Create New Transaction:\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.handleCreateTransactionSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    }, \"Account From:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: event => this.handleAccountFromChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }\n    }, \"Account To:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: event => this.handleAccountToChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"Cash Ammount:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: event => this.handleCashChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, \"All Transactions:\"), transactions));\n  }\n\n}\n\nTransactionsList.contextType = StoreContext;\n\nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    accounts: state.accounts,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats()),\n    fetchAccounts: () => dispatch(fetchAccounts()),\n    createAccount: state => dispatch(createAccount(state)),\n    createCounter: () => dispatch(createCounter()),\n    createTransaction: state => dispatch(createTransaction(state))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsList);","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/transactionsList.jsx"],"names":["React","Component","Account","StoreContext","connect","fetchAccounts","createAccount","createCounter","createTransaction","fetchCats","CreateAccountForm","ContentHeader","Transaction","TransactionsList","state","transaction_from","transaction_to","cash","handleOnClick","console","log","props","fetchTransactions","handleAccountFromChange","event","setState","target","value","handleAccountToChange","handleCashChange","handleCreateTransactionSubmit","preventDefault","account_from","account_to","componentDidMount","render","transactions","undefined","map","transaction","id","divStyle","color","border","padding","contextType","mapStateToProps","catPics","cats","accounts","loading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,aAAvC,EAAsDC,iBAAtD,QAA+E,0BAA/E;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAQC,iBAAR,MAAgC,qBAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,gBAAN,SAA+BZ,SAA/B,CAAwC;AAAA;AAAA;AAAA,SAKtCa,KALsC,GAK9B;AACNC,MAAAA,gBAAgB,EAAG,EADb;AAENC,MAAAA,cAAc,EAAG,EAFX;AAGNC,MAAAA,IAAI,EAAG;AAHD,KAL8B;;AAAA,SAYtCC,aAZsC,GAYtB,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,WAAKC,KAAL,CAAWC,iBAAX;AAEAH,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAEH,KAnBuC;;AAAA,SA2BtCE,uBA3BsC,GA2BZC,KAAK,IAAI;AACjC,WAAKC,QAAL,CAAc;AACZV,QAAAA,gBAAgB,EAAES,KAAK,CAACE,MAAN,CAAaC;AADnB,OAAd;AAGD,KA/BqC;;AAAA,SAiCtCC,qBAjCsC,GAiCdJ,KAAK,IAAI;AAC/B,WAAKC,QAAL,CAAc;AACZT,QAAAA,cAAc,EAAEQ,KAAK,CAACE,MAAN,CAAaC;AADjB,OAAd;AAGD,KArCqC;;AAAA,SAuCtCE,gBAvCsC,GAuCnBL,KAAK,IAAI;AAC1B,WAAKC,QAAL,CAAc;AACZR,QAAAA,IAAI,EAAEO,KAAK,CAACE,MAAN,CAAaC;AADP,OAAd;AAGD,KA3CqC;;AAAA,SA8CtCG,6BA9CsC,GA8CNN,KAAK,IAAI;AACvCA,MAAAA,KAAK,CAACO,cAAN,GADuC,CAEvC;;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAjB;AACA,WAAKO,KAAL,CAAWb,iBAAX,CACE;AAACwB,QAAAA,YAAY,EAAE,KAAKlB,KAAL,CAAWC,gBAA1B;AAA4CkB,QAAAA,UAAU,EAAE,KAAKnB,KAAL,CAAWE,cAAnE;AAAmFC,QAAAA,IAAI,EAAC,KAAKH,KAAL,CAAWG;AAAnG,OADF;AAEA,WAAKI,KAAL,CAAWhB,aAAX;AAED,KAtDqC;AAAA;;AAqBtC6B,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,KAAL,CAAWC,iBAAX;AAED;;AAgCDa,EAAAA,MAAM,GAAG;AACPhB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADO,CACgB;;AACvBD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWe,YAAX,CAAwBA,YAApC;AAEA,QAAIA,YAAY,GAAG,EAAnB;;AAEA,QAAG,KAAKf,KAAL,CAAWe,YAAX,IAA2BC,SAA9B,EAAwC;AACpCD,MAAAA,YAAY,GAAG,KAAKf,KAAL,CAAWe,YAAX,CAAwBA,YAAvC,CADoC,CAEvC;;AACAA,MAAAA,YAAY,GAAG,KAAKf,KAAL,CAAWe,YAAX,CAAwBA,YAAxB,CAAqCE,GAArC,CAAyCC,WAAW,iBAAI;AAAK,QAAA,GAAG,EAAEA,WAAW,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA0B,oBAAC,WAAD;AAAa,QAAA,YAAY,EAAED,WAAW,CAACP,YAAvC;AAAqD,QAAA,UAAU,EAAEO,WAAW,CAACN,UAA7E;AAAyF,QAAA,IAAI,EAAEM,WAAW,CAACtB,IAA3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA1B,eAA4I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA5I,CAAxD,CAAf;AACA,KAJD,MAKI;AACAmB,MAAAA,YAAY,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAf;AACH;;AAED,QAAIK,QAAQ,GAAG;AACbC,MAAAA,KAAK,EAAE,OADM;AAEbC,MAAAA,MAAM,EAAE,iBAFK;AAGbC,MAAAA,OAAO,EAAE;AAHI,KAAf;AAMA,wBAEM;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AAAe,MAAA,KAAK,EAAC,cAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGA;AAAM,MAAA,KAAK,EAAEH,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,eAEE;AAAM,MAAA,QAAQ,EAAEjB,KAAK,IAAI,KAAKM,6BAAL,CAAmCN,KAAnC,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEA,KAAK,IAAI,KAAKD,uBAAL,CAA6BC,KAA7B,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEA,KAAK,IAAI,KAAKI,qBAAL,CAA2BJ,KAA3B,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CATF,eAiBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,eAEE;AACE,MAAA,IAAI,EAAC,MADP;AAEE,MAAA,QAAQ,EAAEA,KAAK,IAAI,KAAKK,gBAAL,CAAsBL,KAAtB,CAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAjBF,eAwBE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,CAFF,CAHA,eAiCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCA,eAoCA;AAAM,MAAA,KAAK,EAAEiB,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,EAIGL,YAJH,CApCA,CAFN;AAiDD;;AA9HqC;;AAAlCvB,gB,CAEGgC,W,GAAc1C,Y;;AAgIvB,MAAM2C,eAAe,GAAGhC,KAAK,IAAI;AAC/B,SAAO;AACLiC,IAAAA,OAAO,EAAEjC,KAAK,CAACkC,IADV;AAELC,IAAAA,QAAQ,EAAEnC,KAAK,CAACmC,QAFX;AAGLC,IAAAA,OAAO,EAAEpC,KAAK,CAACoC;AAHV,GAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACL3C,IAAAA,SAAS,EAAE,MAAM2C,QAAQ,CAAC3C,SAAS,EAAV,CADpB;AAELJ,IAAAA,aAAa,EAAE,MAAM+C,QAAQ,CAAC/C,aAAa,EAAd,CAFxB;AAGLC,IAAAA,aAAa,EAAGQ,KAAD,IAAWsC,QAAQ,CAAC9C,aAAa,CAACQ,KAAD,CAAd,CAH7B;AAILP,IAAAA,aAAa,EAAE,MAAM6C,QAAQ,CAAC7C,aAAa,EAAd,CAJxB;AAKLC,IAAAA,iBAAiB,EAAGM,KAAD,IAAWsC,QAAQ,CAAC5C,iBAAiB,CAACM,KAAD,CAAlB;AALjC,GAAP;AAOD,CARD;;AASA,eAAeV,OAAO,CAAC0C,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CtC,gBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Account from './account'\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter, createTransaction } from '../actions/fetchAccounts'\nimport { fetchCats } from '../actions/fetchCats'\nimport  CreateAccountForm  from './createAccountForm'\nimport ContentHeader from './contentHeader';\nimport Transaction from './transaction';\n\nclass TransactionsList extends Component{\n\n  static contextType = StoreContext;\n\n\n  state = {\n    transaction_from : '',\n    transaction_to : '',\n    cash : ''\n\n  };\n\n  handleOnClick = () => {\n    console.log(\"handleOnClicks\")\n    \n    this.props.fetchTransactions()\n    \n    console.log(this.props)\n    \n}\n\n  componentDidMount() {\n    this.props.fetchTransactions()\n   \n  }\n\n\n  handleAccountFromChange = event => {\n    this.setState({\n      transaction_from: event.target.value\n    });\n  };\n\n  handleAccountToChange = event => {\n    this.setState({\n      transaction_to: event.target.value\n    });\n  };\n\n  handleCashChange = event => {\n    this.setState({\n      cash: event.target.value\n    });\n  };\n \n\n  handleCreateTransactionSubmit = event => {\n    event.preventDefault();\n    //this.props.dispatch({ type: 'ADD_TODO', payload: this.state });\n    console.log(this.state)\n    this.props.createTransaction(\n      {account_from: this.state.transaction_from, account_to: this.state.transaction_to, cash:this.state.cash})\n    this.props.fetchAccounts()\n\n  };\n\n  render() {\n    console.log(\"Props \" ) // log will fire every time App renders\n    console.log(this.props.transactions.transactions)\n\n    let transactions = \"\"\n\n    if(this.props.transactions != undefined){\n        transactions = this.props.transactions.transactions\n     // console.log(accounts[1])\n     transactions = this.props.transactions.transactions.map(transaction => <div key={transaction.id}><Transaction account_from={transaction.account_from} account_to={transaction.account_to} cash={transaction.cash}/><br /></div>);\n    }\n    else{\n        transactions = <div>Loading ...</div>\n    }\n\n    let divStyle = {\n      color: 'black',\n      border: 'solid 2px black',\n      padding: '15px'\n    };\n\n    return (\n      \n          <div className=\"Home\">\n            <ContentHeader title=\"Transactions\"/>\n\n          <div  style={divStyle}>\n            <h3>Create New Transaction:</h3>\n            <form onSubmit={event => this.handleCreateTransactionSubmit(event)}>\n              <p>\n                <label>Account From:</label>\n                <input\n                  type=\"text\"\n                  onChange={event => this.handleAccountFromChange(event)}\n                />\n              </p>\n\n              <p>\n                <label>Account To:</label>\n                <input\n                  type=\"text\"\n                  onChange={event => this.handleAccountToChange(event)}\n                />\n              </p>\n\n              <p>\n                <label>Cash Ammount:</label>\n                <input\n                  type=\"text\"\n                  onChange={event => this.handleCashChange(event)}\n                />\n              </p>\n              <input type=\"submit\" />\n            </form>\n          </div>\n\n          <br />\n\n            \n          <div  style={divStyle}>\n            <h3>All Transactions:</h3>\n\n\n            {transactions}\n            </div>\n\n        \n            \n          </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    accounts: state.accounts,\n    loading: state.loading\n  }\n}\n \nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats()),\n    fetchAccounts: () => dispatch(fetchAccounts()),\n    createAccount: (state) => dispatch(createAccount(state)),\n    createCounter: () => dispatch(createCounter()),\n    createTransaction: (state) => dispatch(createTransaction(state)),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsList)\n"]},"metadata":{},"sourceType":"module"}