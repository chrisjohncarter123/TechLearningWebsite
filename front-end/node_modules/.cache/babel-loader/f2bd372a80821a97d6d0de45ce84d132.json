{"ast":null,"code":"/*\nexport const fetchAccounts = () => {\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_ACCOUNTS'})\n      fetch('https://localhost:4000/accounts').then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON.json })\n      })\n    }\n  }\n  */\nconst accountTemplate = state => ({\n  name: state.name\n});\n\nconst transactionTemplate = state => ({\n  account_from: state.account_from,\n  account_from: state.account_from,\n  account_from: state.account_from\n});\n\nexport const fetchAccounts = () => {\n  console.log(\"HI\");\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_ACCOUNTS'\n    });\n    fetch('http://localhost:4000/accounts').then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      console.log(responseJSON);\n      dispatch({\n        type: 'ADD_ACCOUNTS',\n        accounts: responseJSON\n      });\n    });\n  };\n};\nexport const createCounter = () => {\n  let name = \"New Name Here\"; // Simple POST request with a JSON body using fetch\n\n  const requestOptions = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      counter: {\n        name: name\n      }\n    })\n  };\n  fetch('http://localhost:4000/counters', requestOptions).then(response => response.json()).then(data => console.log(data));\n};\nexport const createAccount = state => {\n  console.log(\"HI\");\n  let header = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(accountTemplate(state))\n  };\n  return dispatch => {\n    dispatch({\n      type: 'CREATE_ACCOUNT'\n    });\n    fetch('http://localhost:4000/accounts', header).then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      console.log(responseJSON); // dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON })\n    });\n  };\n};\nexport const createTransaction = state => {\n  let header = {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(accountTemplate(state))\n  };\n  return dispatch => {\n    dispatch({\n      type: 'CREATE_ACCOUNT'\n    });\n    fetch('http://localhost:4000/accounts', header).then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      console.log(responseJSON); // dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON })\n    });\n  };\n};","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/actions/fetchAccounts.js"],"names":["accountTemplate","state","name","transactionTemplate","account_from","fetchAccounts","console","log","dispatch","type","fetch","then","response","json","responseJSON","accounts","createCounter","requestOptions","method","headers","body","JSON","stringify","counter","data","createAccount","header","createTransaction"],"mappings":"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","sourcesContent":["\n/*\nexport const fetchAccounts = () => {\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_ACCOUNTS'})\n      fetch('https://localhost:4000/accounts').then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON.json })\n      })\n    }\n  }\n  */\n\n const accountTemplate = (state) => ({\n  name: state.name\n\n});\n\nconst transactionTemplate = (state) => ({\n  account_from: state.account_from,\n  account_from: state.account_from,\n  account_from: state.account_from,\n\n});\n\n\n  export const fetchAccounts = () => {\n\n    console.log(\"HI\")\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_ACCOUNTS'})\n      fetch('http://localhost:4000/accounts').then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        console.log(responseJSON)\n        dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON })\n      })\n    }\n  }\n\n\n  export const createCounter = () => {\n    let name = \"New Name Here\"\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n     method: 'POST',\n     headers: { 'Content-Type': 'application/json' },\n     body: JSON.stringify({counter:{ name: name }})\n   };\n   fetch('http://localhost:4000/counters', requestOptions)\n       .then(response => response.json())\n       .then(data => console.log(data));\n }\n\n\n  export const createAccount = (state) => {\n    console.log(\"HI\")\n\n    let header = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(accountTemplate(state)),\n    };\n\n    return (dispatch) => {\n      dispatch({ type: 'CREATE_ACCOUNT'})\n      fetch('http://localhost:4000/accounts', header).then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        console.log(responseJSON)\n       // dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON })\n      })\n    }\n  }\n\n  export const createTransaction = (state) => {\n\n    let header = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(accountTemplate(state)),\n    };\n\n    return (dispatch) => {\n      dispatch({ type: 'CREATE_ACCOUNT'})\n      fetch('http://localhost:4000/accounts', header).then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        console.log(responseJSON)\n       // dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON })\n      })\n    }\n  }\n\n\n"]},"metadata":{},"sourceType":"module"}