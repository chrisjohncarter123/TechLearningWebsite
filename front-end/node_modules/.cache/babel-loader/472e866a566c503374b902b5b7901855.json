{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/cats.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCats } from '../actions/fetchCats';\n\nclass Cats extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnClick = () => {\n      console.log(\"handleOnClicks\");\n      this.props.fetchCats();\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props); //this.props.fetchCats()\n  }\n\n  render() {\n    console.log(\"Props \"); // log will fire every time App renders\n\n    console.log(this.props.catPics.cats[0]);\n    let cats = \"\";\n\n    if (this.props.catPics != undefined) {\n      cats = this.props.catPics.cats;\n      console.log(cats[1]);\n      cats = this.props.catPics.cats.map(cat => /*#__PURE__*/React.createElement(\"li\", {\n        key: cat.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 51\n        }\n      }, cat.url));\n    } else {\n      cats = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 16\n        }\n      }, \"Loading ...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Cats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }, \"CatBook\"), /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, \"Get Cats\"), cats);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cats);","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/cats.jsx"],"names":["React","Component","connect","fetchCats","Cats","handleOnClick","console","log","props","componentDidMount","render","catPics","cats","undefined","map","cat","id","url","mapStateToProps","state","loading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAAA;AAAA;;AAAA,SAEzBI,aAFyB,GAET,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,WAAKC,KAAL,CAAWL,SAAX;AAGH,KARwB;AAAA;;AAU3BM,EAAAA,iBAAiB,GAAG;AAClBH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB,EADkB,CAElB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADO,CACgB;;AACvBD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,CAAxB,CAAZ;AAEA,QAAIA,IAAI,GAAG,EAAX;;AAEA,QAAG,KAAKJ,KAAL,CAAWG,OAAX,IAAsBE,SAAzB,EAAmC;AAC/BD,MAAAA,IAAI,GAAG,KAAKJ,KAAL,CAAWG,OAAX,CAAmBC,IAA1B;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAI,CAAC,CAAD,CAAhB;AACAA,MAAAA,IAAI,GAAG,KAAKJ,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwBE,GAAxB,CAA4BC,GAAG,iBAAI;AAAI,QAAA,GAAG,EAAEA,GAAG,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBD,GAAG,CAACE,GAAtB,CAAnC,CAAP;AACH,KAJD,MAKI;AACAL,MAAAA,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AAAM,MAAA,OAAO,EAAE,KAAKP,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,EAGGO,IAHH,CADF;AAQD;;AArC0B;;AAwC7B,MAAMM,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,OAAO,EAAEQ,KAAK,CAACP,IADV;AAELQ,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLnB,IAAAA,SAAS,EAAE,MAAMmB,QAAQ,CAACnB,SAAS,EAAV;AADpB,GAAP;AAGD,CAJD;;AAKA,eAAeD,OAAO,CAACgB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjB,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCats } from '../actions/fetchCats'\n \nclass Cats extends Component {\n\n    handleOnClick = () => {\n        console.log(\"handleOnClicks\")\n        \n        this.props.fetchCats()\n        \n        \n    }\n \n  componentDidMount() {\n    console.log(this.props)\n    //this.props.fetchCats()\n  }\n \n  render() {\n    console.log(\"Props \" ) // log will fire every time App renders\n    console.log(this.props.catPics.cats[0])\n\n    let cats = \"\"\n\n    if(this.props.catPics != undefined){\n        cats = this.props.catPics.cats\n        console.log(cats[1])\n        cats = this.props.catPics.cats.map(cat => <li key={cat.id}>{cat.url}</li>);\n    }\n    else{\n        cats = <div>Loading ...</div>\n    }\n    return (\n      <div className=\"Cats\">\n        <h1>CatBook</h1>\n        <span onClick={this.handleOnClick}>Get Cats</span>\n        {cats}\n       \n      </div>\n    );\n  }\n}\n \nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    loading: state.loading\n  }\n}\n \nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Cats)"]},"metadata":{},"sourceType":"module"}