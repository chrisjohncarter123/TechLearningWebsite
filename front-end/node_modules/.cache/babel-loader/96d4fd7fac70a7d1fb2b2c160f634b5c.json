{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/transactionsList.jsx\";\nimport React, { Component } from 'react';\nimport Account from './account';\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter, createTransaction, fetchTransactions } from '../actions/fetchAccounts';\nimport { fetchCats } from '../actions/fetchCats';\nimport CreateAccountForm from './createAccountForm';\nimport ContentHeader from './contentHeader';\nimport Transaction from './transaction';\n\nclass TransactionsList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleCreateTransactionSubmit = event => {\n      event.preventDefault();\n      this.props.createTransaction({\n        account_from: this.state.transaction_from,\n        account_to: this.state.transaction_to,\n        cash: this.state.cash\n      });\n      this.props.fetchTransactions();\n    };\n  }\n\n  render() {\n    console.log(\"Props \");\n    console.log(this.props);\n    let transactions = \"\";\n\n    if (this.props.transactions != undefined) {\n      transactions = this.props.transactions.transactions; // console.log(accounts[1])\n\n      transactions = this.props.transactions.transactions.map(transaction => /*#__PURE__*/React.createElement(\"div\", {\n        key: transaction.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Transaction, {\n        account_from: transaction.account_from,\n        account_to: transaction.account_to,\n        cash: transaction.cash,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 14\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 9\n        }\n      })));\n    } else {\n      transactions = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 24\n        }\n      }, \"Loading ...\");\n    }\n\n    let divStyle = {\n      color: 'black',\n      border: 'solid 2px black',\n      padding: '15px'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, transactions);\n  }\n\n}\n\nTransactionsList.contextType = StoreContext;\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.transactions,\n    loading: state.loading_transactions\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTransactions: () => dispatch(fetchTransactions()),\n    createTransaction: state => dispatch(createTransaction(state))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsList);","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/transactionsList.jsx"],"names":["React","Component","Account","StoreContext","connect","fetchAccounts","createAccount","createCounter","createTransaction","fetchTransactions","fetchCats","CreateAccountForm","ContentHeader","Transaction","TransactionsList","handleCreateTransactionSubmit","event","preventDefault","props","account_from","state","transaction_from","account_to","transaction_to","cash","render","console","log","transactions","undefined","map","transaction","id","divStyle","color","border","padding","contextType","mapStateToProps","loading","loading_transactions","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Account from './account'\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter, createTransaction, fetchTransactions } from '../actions/fetchAccounts'\nimport { fetchCats } from '../actions/fetchCats'\nimport  CreateAccountForm  from './createAccountForm'\nimport ContentHeader from './contentHeader';\nimport Transaction from './transaction';\n\nclass TransactionsList extends Component{\n\n  static contextType = StoreContext;\n\n    /*\n  state = {\n    transaction_from : '',\n    transaction_to : '',\n    cash : ''\n\n  };\n  */\n\n \n\n  handleCreateTransactionSubmit = event => {\n    event.preventDefault();\n    this.props.createTransaction(\n      {account_from: this.state.transaction_from, account_to: this.state.transaction_to, cash:this.state.cash})\n    this.props.fetchTransactions()\n\n  };\n\n  render() {\n    console.log(\"Props \" ) \n    console.log(this.props)\n\n    let transactions = \"\"\n\n    if(this.props.transactions != undefined){\n    transactions = this.props.transactions.transactions\n     // console.log(accounts[1])\n     transactions = this.props.transactions.transactions.map(transaction =>\n        <div key={transaction.id}>\n             <Transaction \n             account_from={transaction.account_from}\n             account_to={transaction.account_to}\n             cash={transaction.cash}/>\n        <br /></div>);\n    }\n    else{\n        transactions = <div>Loading ...</div>\n    }\n\n    let divStyle = {\n      color: 'black',\n      border: 'solid 2px black',\n      padding: '15px'\n    };\n\n    return (\n      \n          <div className=\"Home\">\n            {transactions}\n          </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.transactions,\n    loading: state.loading_transactions\n  }\n}\n \nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTransactions: () => dispatch(fetchTransactions()),\n    createTransaction: (state) => dispatch(createTransaction(state)),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsList)\n"]},"metadata":{},"sourceType":"module"}