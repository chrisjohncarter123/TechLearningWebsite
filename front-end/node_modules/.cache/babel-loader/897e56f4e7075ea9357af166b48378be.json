{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/TechLearningWebsite/front-end/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducer from './reducers/reducer';\nimport { combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport App from './components/app';\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  astronauts: astronautsReducer,\n  cats: catsReducer,\n  accounts: accountsReducer\n}); //withou redux, there is passing around tons of props and needless re-rendering\n//redux is tiny library and design pattern that makes state changes predictable \n//no need for multiple stores, domain is already split into multiple reducers\n\nconst store = createStore(rootReducer, //used for devtools\nwindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(), //needed to use thunk\napplyMiddleware(thunk));\nstore.subscribe(() => {\n  console.log(\"subscription\");\n});\nReactDOM.render(\n/*#__PURE__*/\n//provider allows store to be accessed in any component in <App />\nReact.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }\n})), document.getElementById('root')); //,document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/TechLearningWebsite/front-end/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","reducer","combineReducers","thunk","serviceWorker","App","rootReducer","counter","counterReducer","astronauts","astronautsReducer","cats","catsReducer","accounts","accountsReducer","store","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","console","log","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,kCAAP;AACA,OAAO,mCAAP;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AAIA,MAAMC,WAAW,GAAGJ,eAAe,CAAC;AAClCK,EAAAA,OAAO,EAAEC,cADyB;AAElCC,EAAAA,UAAU,EAAEC,iBAFsB;AAGlCC,EAAAA,IAAI,EAAEC,WAH4B;AAIlCC,EAAAA,QAAQ,EAAEC;AAJwB,CAAD,CAAnC,C,CAOA;AACA;AAGA;;AACA,MAAMC,KAAK,GAAGhB,WAAW,CACvBO,WADuB,EAEvB;AACAU,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAHhB,EAIvB;AACAjB,eAAe,CAACG,KAAD,CALQ,CAAzB;AAQAY,KAAK,CAACG,SAAN,CAAgB,MAAM;AAEpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,CAHD;AAMAvB,QAAQ,CAACwB,MAAT;AAAA;AACE;AACE,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEN,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFJ,EAIiBO,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJjB,E,CAME;AAEF;AACA;AACA;;AACAnB,aAAa,CAACoB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducer from './reducers/reducer';\nimport { combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nimport App from './components/app'\n\n\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  astronauts: astronautsReducer,\n  cats: catsReducer,\n  accounts: accountsReducer\n});\n\n//withou redux, there is passing around tons of props and needless re-rendering\n//redux is tiny library and design pattern that makes state changes predictable \n\n\n//no need for multiple stores, domain is already split into multiple reducers\nconst store = createStore(\n  rootReducer,\n  //used for devtools\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n  //needed to use thunk\n  applyMiddleware(thunk));\n\n\nstore.subscribe(() => {\n \n  console.log(\"subscription\")\n});\n\n\nReactDOM.render(\n  //provider allows store to be accessed in any component in <App />\n    <Provider store={store}>\n      <App />\n    </Provider>, document.getElementById('root')\n  )\n  //,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}