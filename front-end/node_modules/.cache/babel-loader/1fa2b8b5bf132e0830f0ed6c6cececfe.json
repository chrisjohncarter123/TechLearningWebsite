{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/home.jsx\";\nimport React, { Component } from 'react';\nimport Account from './account';\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts } from '../actions/fetchAccounts';\nimport { fetchCats } from '../actions/fetchCats';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnClick = () => {\n      console.log(\"handleOnClicks\");\n      this.props.fetchAccounts();\n      this.props.fetchCats();\n      console.log(this.props);\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n  }\n\n  render() {\n    console.log(\"Props \"); // log will fire every time App renders\n\n    console.log(this.props);\n    let cats = \"\";\n\n    if (this.props.catPics != undefined) {\n      cats = this.props.catPics.cats;\n      console.log(cats[1]);\n      cats = this.props.catPics.cats.map(cat => /*#__PURE__*/React.createElement(\"li\", {\n        key: cat.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 49\n        }\n      }, cat.url));\n    } else {\n      cats = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }\n      }, \"Loading ...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Bank Accounts:\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 16\n      }\n    }, \"Get Accounts\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"AddBank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 16\n      }\n    }, \"Add Bank\")), cats);\n  }\n\n}\n\nHome.contextType = StoreContext;\n\nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    accounts: state.accounts,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats()),\n    fetchAccounts: () => dispatch(fetchAccounts())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/home.jsx"],"names":["React","Component","Account","StoreContext","connect","fetchAccounts","fetchCats","Home","handleOnClick","console","log","props","componentDidMount","render","cats","catPics","undefined","map","cat","id","url","contextType","mapStateToProps","state","accounts","loading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,MAAMC,IAAN,SAAmBN,SAAnB,CAA4B;AAAA;AAAA;;AAAA,SAI1BO,aAJ0B,GAIV,MAAM;AACpBC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AAEA,WAAKC,KAAL,CAAWN,aAAX;AACA,WAAKM,KAAL,CAAWL,SAAX;AAEAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAEH,KAZ2B;AAAA;;AAgB1BC,EAAAA,iBAAiB,GAAG;AAClBH,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACPJ,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADO,CACgB;;AACvBD,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AAEA,QAAIG,IAAI,GAAG,EAAX;;AAEA,QAAG,KAAKH,KAAL,CAAWI,OAAX,IAAsBC,SAAzB,EAAmC;AACjCF,MAAAA,IAAI,GAAG,KAAKH,KAAL,CAAWI,OAAX,CAAmBD,IAA1B;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYI,IAAI,CAAC,CAAD,CAAhB;AACAA,MAAAA,IAAI,GAAG,KAAKH,KAAL,CAAWI,OAAX,CAAmBD,IAAnB,CAAwBG,GAAxB,CAA4BC,GAAG,iBAAI;AAAI,QAAA,GAAG,EAAEA,GAAG,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAkBD,GAAG,CAACE,GAAtB,CAAnC,CAAP;AACD,KAJD,MAKI;AACAN,MAAAA,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH;;AAED,wBACM;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAM,MAAA,OAAO,EAAE,KAAKN,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAH,CAJF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAG;AAAG,MAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAH,CANF,EAQGM,IARH,CADN;AAaD;;AAhDyB;;AAAtBP,I,CAEGc,W,GAAclB,Y;;AAkDvB,MAAMmB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLR,IAAAA,OAAO,EAAEQ,KAAK,CAACT,IADV;AAELU,IAAAA,QAAQ,EAAED,KAAK,CAACC,QAFX;AAGLC,IAAAA,OAAO,EAAEF,KAAK,CAACE;AAHV,GAAP;AAKD,CAND;;AAQA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLrB,IAAAA,SAAS,EAAE,MAAMqB,QAAQ,CAACrB,SAAS,EAAV,CADpB;AAELD,IAAAA,aAAa,EAAE,MAAMsB,QAAQ,CAACtB,aAAa,EAAd;AAFxB,GAAP;AAID,CALD;;AAMA,eAAeD,OAAO,CAACkB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CnB,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Account from './account'\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts } from '../actions/fetchAccounts'\nimport { fetchCats } from '../actions/fetchCats'\n\nclass Home extends Component{\n\n  static contextType = StoreContext;\n\n  handleOnClick = () => {\n    console.log(\"handleOnClicks\")\n    \n    this.props.fetchAccounts()\n    this.props.fetchCats()\n    \n    console.log(this.props)\n    \n}\n\n\n\n  componentDidMount() {\n    console.log(this.props)\n  }\n\n  render() {\n    console.log(\"Props \" ) // log will fire every time App renders\n    console.log(this.props)\n\n    let cats = \"\"\n\n    if(this.props.catPics != undefined){\n      cats = this.props.catPics.cats\n      console.log(cats[1])\n      cats = this.props.catPics.cats.map(cat => <li key={cat.id}>{cat.url}</li>);\n    }\n    else{\n        cats = <div>Loading ...</div>\n    }\n\n    return (\n          <div className=\"Home\">\n            \n            <h2>Bank Accounts:</h2>\n\n            <p><span onClick={this.handleOnClick}>Get Accounts</span></p>\n\n            <p><a href=\"AddBank\">Add Bank</a></p>\n\n            {cats}\n            \n          </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    accounts: state.accounts,\n    loading: state.loading\n  }\n}\n \nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats()),\n    fetchAccounts: () => dispatch(fetchAccounts())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n"]},"metadata":{},"sourceType":"module"}