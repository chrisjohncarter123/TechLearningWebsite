{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/TechLearningWebsite/front-end/src/components/lesson_navbar.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './app.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport LessonNavItem from './lesson_navitem';\nimport styled from \"styled-components\";\n/* This defines the actual bar going down the screen */\n\nconst StyledSideNav = styled.div`\n  position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n  height: 100%;\n  width: 75px;     /* Set the width of the sidebar */\n  z-index: 1;      /* Stay on top of everything */\n  top: 3.4em;      /* Stay at the top */\n  background-color: #222; /* Black */\n  overflow-x: hidden;     /* Disable horizontal scroll */\n  padding-top: 10px;\n`;\n\nclass LessonNavBar extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onItemClick = path => {\n      this.setState({\n        activePath: path\n      });\n      /* Sets activePath which causes rerender which causes CSS to change */\n    };\n\n    this.state = {\n      activePath: '/',\n      items: [{\n        path: '/',\n\n        /* path is used as id to check which NavItem is active basically */\n        name: 'Home',\n        css: 'fa fa-fw fa-home',\n        key: 1\n        /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n\n      }, {\n        path: '/about',\n        name: 'About',\n        css: 'fa fa-fw fa-clock',\n        key: 2\n      }, {\n        path: '/NoMatch',\n        name: 'NoMatch',\n        css: 'fas fa-hashtag',\n        key: 3\n      }]\n    };\n  }\n\n  render() {\n    const {\n      items,\n      activePath\n    } = this.state;\n    return /*#__PURE__*/React.createElement(StyledSideNav, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    },\n    /* items = just array AND map() loops thru that array AND item is param of that loop */\n    items.map(item => {\n      /* Return however many NavItems in array to be rendered */\n      return /*#__PURE__*/React.createElement(Less, {\n        path: item.path,\n        name: item.name,\n        css: item.css,\n        onItemClick: this.onItemClick\n        /* Simply passed an entire function to onClick prop */\n        ,\n        active: item.path === activePath,\n        key: item.key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }\n      });\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LessonNavBar);","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/TechLearningWebsite/front-end/src/components/lesson_navbar.jsx"],"names":["React","Component","connect","BrowserRouter","Router","Route","Link","LessonNavItem","styled","StyledSideNav","div","LessonNavBar","constructor","props","onItemClick","path","setState","activePath","state","items","name","css","key","render","map","item","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,WAAP;AACA,OAAO,kCAAP;AACA,OAAO,mCAAP;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,kBAArD;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA;;AACA,MAAMC,aAAa,GAAGD,MAAM,CAACE,GAAI;;;;;;;;;CAAjC;;AAYA,MAAMC,YAAN,SAA2BV,SAA3B,CAAqC;AAEnCW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SA2BnBC,WA3BmB,GA2BJC,IAAD,IAAU;AACtB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,UAAU,EAAEF;AAAd,OAAd;AAAqC;AACtC,KA7BkB;;AAEjB,SAAKG,KAAL,GAAa;AACXD,MAAAA,UAAU,EAAE,GADD;AAEXE,MAAAA,KAAK,EAAE,CACL;AACEJ,QAAAA,IAAI,EAAE,GADR;;AACa;AACXK,QAAAA,IAAI,EAAE,MAFR;AAGEC,QAAAA,GAAG,EAAE,kBAHP;AAIEC,QAAAA,GAAG,EAAE;AAAE;;AAJT,OADK,EAOL;AACEP,QAAAA,IAAI,EAAE,QADR;AAEEK,QAAAA,IAAI,EAAE,OAFR;AAGEC,QAAAA,GAAG,EAAE,mBAHP;AAIEC,QAAAA,GAAG,EAAE;AAJP,OAPK,EAaL;AACEP,QAAAA,IAAI,EAAE,UADR;AAEEK,QAAAA,IAAI,EAAE,SAFR;AAGEC,QAAAA,GAAG,EAAE,gBAHP;AAIEC,QAAAA,GAAG,EAAE;AAJP,OAbK;AAFI,KAAb;AAuBD;;AAMDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEJ,MAAAA,KAAF;AAASF,MAAAA;AAAT,QAAwB,KAAKC,KAAnC;AACA,wBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEI;AACAC,IAAAA,KAAK,CAACK,GAAN,CAAWC,IAAD,IAAU;AAClB;AACA,0BACE,oBAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAI,CAACV,IAAjB;AAAuB,QAAA,IAAI,EAAEU,IAAI,CAACL,IAAlC;AAAwC,QAAA,GAAG,EAAEK,IAAI,CAACJ,GAAlD;AAAuD,QAAA,WAAW,EAAE,KAAKP;AAAa;AAAtF;AAA6I,QAAA,MAAM,EAAEW,IAAI,CAACV,IAAL,KAAcE,UAAnK;AAA+K,QAAA,GAAG,EAAEQ,IAAI,CAACH,GAAzL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAGD,KALD,CAHJ,CADF;AAaD;;AAhDkC;;AAmDrC,MAAMI,eAAe,GAAGR,KAAK,IAAI;AAC/B,SAAO,EAAP;AAGD,CAJD;;AAMA,MAAMS,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO,EAAP;AAGD,CAJD;;AAQA,eAAe1B,OAAO,CACpBwB,eADoB,EAEpBC,kBAFoB,CAAP,CAGbhB,YAHa,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './app.css';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport LessonNavItem from './lesson_navitem';\nimport styled from \"styled-components\";\n/* This defines the actual bar going down the screen */\nconst StyledSideNav = styled.div`\n  position: fixed;     /* Fixed Sidebar (stay in place on scroll and position relative to viewport) */\n  height: 100%;\n  width: 75px;     /* Set the width of the sidebar */\n  z-index: 1;      /* Stay on top of everything */\n  top: 3.4em;      /* Stay at the top */\n  background-color: #222; /* Black */\n  overflow-x: hidden;     /* Disable horizontal scroll */\n  padding-top: 10px;\n`;\n\n\nclass LessonNavBar extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      activePath: '/',\n      items: [\n        {\n          path: '/', /* path is used as id to check which NavItem is active basically */\n          name: 'Home',\n          css: 'fa fa-fw fa-home',\n          key: 1 /* Key is required, else console throws error. Does this please you Mr. Browser?! */\n        },\n        {\n          path: '/about',\n          name: 'About',\n          css: 'fa fa-fw fa-clock',\n          key: 2\n        },\n        {\n          path: '/NoMatch',\n          name: 'NoMatch',\n          css: 'fas fa-hashtag',\n          key: 3\n        },\n      ]\n    }  \n  }\n\n  onItemClick = (path) => {\n    this.setState({ activePath: path }); /* Sets activePath which causes rerender which causes CSS to change */\n  }\n\n  render() {\n    const { items, activePath } = this.state;\n    return (\n      <StyledSideNav>\n        {\n          /* items = just array AND map() loops thru that array AND item is param of that loop */\n          items.map((item) => {\n            /* Return however many NavItems in array to be rendered */\n            return (\n              <Less path={item.path} name={item.name} css={item.css} onItemClick={this.onItemClick} /* Simply passed an entire function to onClick prop */ active={item.path === activePath} key={item.key}/>\n            )\n          })\n        }\n      </StyledSideNav>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n\n  };\n};\n\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LessonNavBar);"]},"metadata":{},"sourceType":"module"}