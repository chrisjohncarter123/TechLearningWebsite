{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/home.jsx\";\nimport React, { Component } from 'react';\nimport Account from './account';\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter } from '../actions/fetchAccounts';\nimport { fetchCats } from '../actions/fetchCats';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnClick = () => {\n      console.log(\"handleOnClicks\");\n      this.props.fetchAccounts();\n      this.props.fetchCats();\n      console.log(this.props);\n    };\n\n    this.handleCreateCounter = () => {\n      console.log(\"handleCreateCounter\");\n      this.props.createCounter();\n      console.log(this.props);\n    };\n\n    this.handleCreateAccount = () => {\n      console.log(\"handleCreateAccount\");\n      this.props.createAccount();\n      console.log(this.props);\n    };\n  }\n\n  componentDidMount() {\n    createCounter(\"new name\");\n  }\n\n  render() {\n    console.log(\"Props \"); // log will fire every time App renders\n\n    console.log(this.props.accounts.accounts);\n    let accounts = \"\";\n\n    if (this.props.accounts != undefined) {\n      accounts = this.props.accounts.accounts; // console.log(accounts[1])\n\n      accounts = this.props.accounts.accounts.map(account => /*#__PURE__*/React.createElement(\"div\", {\n        key: account.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 62\n        }\n      }, /*#__PURE__*/React.createElement(Account, {\n        name: account.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 84\n        }\n      })));\n    } else {\n      accounts = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 18\n        }\n      }, \"Loading ...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, \"Bank Accounts:\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }\n    }, \"Get Accounts\")), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleCreateCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Create Counter\")), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleCreateAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }, \"Create Account\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"AddBank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 16\n      }\n    }, \"Add Bank\")), accounts);\n  }\n\n}\n\nHome.contextType = StoreContext;\n\nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    accounts: state.accounts,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats()),\n    fetchAccounts: () => dispatch(fetchAccounts()),\n    createAccount: state => dispatch(createAccount(state)),\n    createCounter: name => dispatch(createCounter())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/home.jsx"],"names":["React","Component","Account","StoreContext","connect","fetchAccounts","createAccount","createCounter","fetchCats","Home","handleOnClick","console","log","props","handleCreateCounter","handleCreateAccount","componentDidMount","render","accounts","undefined","map","account","id","name","contextType","mapStateToProps","state","catPics","cats","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Account from './account'\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter } from '../actions/fetchAccounts'\nimport { fetchCats } from '../actions/fetchCats'\n\nclass Home extends Component{\n\n  static contextType = StoreContext;\n\n  handleOnClick = () => {\n    console.log(\"handleOnClicks\")\n    \n    this.props.fetchAccounts()\n    this.props.fetchCats()\n    \n    console.log(this.props)\n    \n}\n\n  componentDidMount() {\n    createCounter(\"new name\")\n   \n  }\n\n  handleCreateCounter = () => {\n    console.log(\"handleCreateCounter\")\n\n  \n    this.props.createCounter()\n\n    console.log(this.props)\n\n  }\n\n  handleCreateAccount = () => {\n    console.log(\"handleCreateAccount\")\n\n  \n    this.props.createAccount()\n\n    console.log(this.props)\n\n  }\n\n  render() {\n    console.log(\"Props \" ) // log will fire every time App renders\n    console.log(this.props.accounts.accounts)\n\n    let accounts = \"\"\n\n    if(this.props.accounts != undefined){\n      accounts = this.props.accounts.accounts\n     // console.log(accounts[1])\n      accounts = this.props.accounts.accounts.map(account => <div key={account.id}><Account name={account.name}/></div>);\n    }\n    else{\n      accounts = <div>Loading ...</div>\n    }\n\n    return (\n          <div className=\"Home\">\n            \n            <h2>Bank Accounts:</h2>\n\n            <button><span onClick={this.handleOnClick}>Get Accounts</span></button>\n\n            <button><span onClick={this.handleCreateCounter}>Create Counter</span></button>\n\n            <button><span onClick={this.handleCreateAccount}>Create Account</span></button>\n\n            <p><a href=\"AddBank\">Add Bank</a></p>\n\n            {accounts}\n            \n          </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    accounts: state.accounts,\n    loading: state.loading\n  }\n}\n \nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats()),\n    fetchAccounts: () => dispatch(fetchAccounts()),\n    createAccount: (state) => dispatch(createAccount(state)),\n    createCounter: (name) => dispatch(createCounter())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n"]},"metadata":{},"sourceType":"module"}