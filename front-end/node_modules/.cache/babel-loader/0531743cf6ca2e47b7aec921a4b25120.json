{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/transactionsList.jsx\";\nimport React, { Component } from 'react';\nimport Account from './account';\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter, createTransaction, fetchTransactions } from '../actions/fetchAccounts';\nimport { fetchCats } from '../actions/fetchCats';\nimport CreateAccountForm from './createAccountForm';\nimport ContentHeader from './contentHeader';\nimport Transaction from './transaction';\n\nclass TransactionsList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.renderTransactions = () => {\n      let transactions = \"\";\n\n      if (this.props.transactions != undefined) {\n        transactions = this.props.transactions.transactions; // console.log(accounts[1])\n\n        transactions = this.props.transactions.transactions.map(transaction => /*#__PURE__*/React.createElement(\"div\", {\n          key: transaction.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(Transaction, {\n          account_from: transaction.account_from,\n          account_to: transaction.account_to,\n          cash: transaction.cash,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 14\n          }\n        }), /*#__PURE__*/React.createElement(\"br\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 9\n          }\n        })));\n      } else {\n        transactions = /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 24\n          }\n        }, \"Loading ...\");\n      }\n\n      return transactions;\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, transactions);\n  }\n\n}\n\nTransactionsList.contextType = StoreContext;\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.transactions,\n    loading: state.loading_transactions\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTransactions: () => dispatch(fetchTransactions()),\n    createTransaction: state => dispatch(createTransaction(state))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsList);","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/transactionsList.jsx"],"names":["React","Component","Account","StoreContext","connect","fetchAccounts","createAccount","createCounter","createTransaction","fetchTransactions","fetchCats","CreateAccountForm","ContentHeader","Transaction","TransactionsList","renderTransactions","transactions","props","undefined","map","transaction","id","account_from","account_to","cash","render","contextType","mapStateToProps","state","loading","loading_transactions","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,aAAT,EAAwBC,aAAxB,EAAuCC,aAAvC,EAAsDC,iBAAtD,EAAyEC,iBAAzE,QAAkG,0BAAlG;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,OAAQC,iBAAR,MAAgC,qBAAhC;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,gBAAN,SAA+Bb,SAA/B,CAAwC;AAAA;AAAA;;AAAA,SAatCc,kBAbsC,GAajB,MAAM;AACzB,UAAIC,YAAY,GAAG,EAAnB;;AAEA,UAAG,KAAKC,KAAL,CAAWD,YAAX,IAA2BE,SAA9B,EAAwC;AACxCF,QAAAA,YAAY,GAAG,KAAKC,KAAL,CAAWD,YAAX,CAAwBA,YAAvC,CADwC,CAEvC;;AACAA,QAAAA,YAAY,GAAG,KAAKC,KAAL,CAAWD,YAAX,CAAwBA,YAAxB,CAAqCG,GAArC,CAAyCC,WAAW,iBAChE;AAAK,UAAA,GAAG,EAAEA,WAAW,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACK,oBAAC,WAAD;AACA,UAAA,YAAY,EAAED,WAAW,CAACE,YAD1B;AAEA,UAAA,UAAU,EAAEF,WAAW,CAACG,UAFxB;AAGA,UAAA,IAAI,EAAEH,WAAW,CAACI,IAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADL,eAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALA,CADY,CAAf;AAOA,OAVD,MAWI;AACAR,QAAAA,YAAY,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAf;AACH;;AAED,aAAOA,YAAP;AAED,KAjCqC;AAAA;;AAmCtCS,EAAAA,MAAM,GAAG;AAEP,wBAEM;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,YADH,CAFN;AAMD;;AA3CqC;;AAAlCF,gB,CAEGY,W,GAAcvB,Y;;AA6CvB,MAAMwB,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLZ,IAAAA,YAAY,EAAEY,KAAK,CAACZ,YADf;AAELa,IAAAA,OAAO,EAAED,KAAK,CAACE;AAFV,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLvB,IAAAA,iBAAiB,EAAE,MAAMuB,QAAQ,CAACvB,iBAAiB,EAAlB,CAD5B;AAELD,IAAAA,iBAAiB,EAAGoB,KAAD,IAAWI,QAAQ,CAACxB,iBAAiB,CAACoB,KAAD,CAAlB;AAFjC,GAAP;AAID,CALD;;AAMA,eAAexB,OAAO,CAACuB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CjB,gBAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport Account from './account'\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter, createTransaction, fetchTransactions } from '../actions/fetchAccounts'\nimport { fetchCats } from '../actions/fetchCats'\nimport  CreateAccountForm  from './createAccountForm'\nimport ContentHeader from './contentHeader';\nimport Transaction from './transaction';\n\nclass TransactionsList extends Component{\n\n  static contextType = StoreContext;\n\n    /*\n  state = {\n    transaction_from : '',\n    transaction_to : '',\n    cash : ''\n\n  };\n  */\n\n  renderTransactions = () => {\n    let transactions = \"\"\n\n    if(this.props.transactions != undefined){\n    transactions = this.props.transactions.transactions\n     // console.log(accounts[1])\n     transactions = this.props.transactions.transactions.map(transaction =>\n        <div key={transaction.id}>\n             <Transaction \n             account_from={transaction.account_from}\n             account_to={transaction.account_to}\n             cash={transaction.cash}/>\n        <br /></div>);\n    }\n    else{\n        transactions = <div>Loading ...</div>\n    }\n\n    return transactions;\n\n  }\n\n  render() {\n\n    return (\n      \n          <div className=\"Home\">\n            {transactions}\n          </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    transactions: state.transactions,\n    loading: state.loading_transactions\n  }\n}\n \nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchTransactions: () => dispatch(fetchTransactions()),\n    createTransaction: (state) => dispatch(createTransaction(state)),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsList)\n"]},"metadata":{},"sourceType":"module"}