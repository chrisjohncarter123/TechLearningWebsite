{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/cats.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCats } from '../actions/fetchCats';\n\nclass Cats extends Component {\n  componentDidMount() {\n    console.log(this.props);\n    this.props.fetchCats();\n  }\n\n  render() {\n    console.log(\"Props \"); // log will fire every time App renders\n\n    let cats = \"\";\n\n    if (this.props.catPics != undefined) {\n      cats = this.props.catPics;\n      console.log(cats[1]); // cats = this.props.cats.map(astro => <li key={astro.id}>{astro.id}</li>);\n    } else {\n      cats = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 16\n        }\n      }, \"Loading ...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Cats\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, \"CatBook\"));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cats);","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/cats.jsx"],"names":["React","Component","connect","fetchCats","Cats","componentDidMount","console","log","props","render","cats","catPics","undefined","mapStateToProps","state","loading","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,SAAT,QAA0B,sBAA1B;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAE3BI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAjB;AACA,SAAKA,KAAL,CAAWL,SAAX;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACPH,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EADO,CACgB;;AAEvB,QAAIG,IAAI,GAAG,EAAX;;AAEA,QAAG,KAAKF,KAAL,CAAWG,OAAX,IAAsBC,SAAzB,EAAmC;AAC/BF,MAAAA,IAAI,GAAG,KAAKF,KAAL,CAAWG,OAAlB;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAYG,IAAI,CAAC,CAAD,CAAhB,EAF+B,CAGhC;AACF,KAJD,MAKI;AACAA,MAAAA,IAAI,gBAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAP;AACH;;AACD,wBACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF;AAOD;;AA3B0B;;AA8B7B,MAAMG,eAAe,GAAGC,KAAK,IAAI;AAC/B,SAAO;AACLH,IAAAA,OAAO,EAAEG,KAAK,CAACJ,IADV;AAELK,IAAAA,OAAO,EAAED,KAAK,CAACC;AAFV,GAAP;AAID,CALD;;AAOA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLd,IAAAA,SAAS,EAAE,MAAMc,QAAQ,CAACd,SAAS,EAAV;AADpB,GAAP;AAGD,CAJD;;AAKA,eAAeD,OAAO,CAACW,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CZ,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchCats } from '../actions/fetchCats'\n \nclass Cats extends Component {\n \n  componentDidMount() {\n    console.log(this.props)\n    this.props.fetchCats()\n  }\n \n  render() {\n    console.log(\"Props \" ) // log will fire every time App renders\n\n    let cats = \"\"\n\n    if(this.props.catPics != undefined){\n        cats = this.props.catPics\n        console.log(cats[1])\n       // cats = this.props.cats.map(astro => <li key={astro.id}>{astro.id}</li>);\n    }\n    else{\n        cats = <div>Loading ...</div>\n    }\n    return (\n      <div className=\"Cats\">\n        <h1>CatBook</h1>\n        {/*cats*/}\n       \n      </div>\n    );\n  }\n}\n \nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    loading: state.loading\n  }\n}\n \nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Cats)"]},"metadata":{},"sourceType":"module"}