{"ast":null,"code":"/*\nexport const fetchAccounts = () => {\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_ACCOUNTS'})\n      fetch('https://localhost:4000/accounts').then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON.json })\n      })\n    }\n  }\n  */\nconst accountTemplate = state => ({\n  name: state.name\n});\n\nexport const fetchAccounts = () => {\n  console.log(\"HI\");\n  return dispatch => {\n    dispatch({\n      type: 'LOADING_ACCOUNTS'\n    });\n    fetch('http://localhost:4000/accounts').then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      console.log(responseJSON);\n      dispatch({\n        type: 'ADD_ACCOUNTS',\n        accounts: responseJSON\n      });\n    });\n  };\n};\nexport const createAccount = () => {\n  console.log(\"HI\");\n  let state = {\n    name: \"chris\"\n  };\n  let header = {\n    method: \"Post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify(accountTemplate(state))\n  };\n  return dispatch => {\n    dispatch({\n      type: 'CREATE_ACCOUNT'\n    });\n    fetch('http://localhost:4000/accounts', header).then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      console.log(responseJSON);\n      dispatch({\n        type: 'ADD_ACCOUNTS',\n        accounts: responseJSON\n      });\n    });\n  };\n};\nexport const createCounter = () => {\n  console.log(\"HI\");\n  let state = {\n    name: \"chris2\"\n  };\n  console.log(state);\n  let header = {\n    method: \"Post\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Accept: \"application/json\"\n    },\n    body: JSON.stringify(accountTemplate(state))\n  };\n  return dispatch => {\n    fetch('http://localhost:4000/counters', header).then(response => {\n      return response.json();\n    }).then(responseJSON => {\n      console.log(responseJSON);\n    });\n  };\n};\n/*\n  export const createUser = (state) => {\n    let configurationObject = {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(_userObject(state)),\n    };\n    return async (dispatch) => {\n      const res = await fetch(BASEURL + \"sign_up\", configurationObject);\n      const json = await res.json();\n      if (json.error) {\n        throw new Error(json.error + \" \" + json.message);\n      }\n      localStorage.setItem(\"token\", json.jwt);\n      dispatch({\n        type: \"CREATE_USER\",\n        payload: json.user,\n      });\n    };\n  };\n  */","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/actions/fetchAccounts.js"],"names":["accountTemplate","state","name","fetchAccounts","console","log","dispatch","type","fetch","then","response","json","responseJSON","accounts","createAccount","header","method","headers","Accept","body","JSON","stringify","createCounter"],"mappings":"AACA;;;;;;;;;;;;AAcC,MAAMA,eAAe,GAAIC,KAAD,KAAY;AACnCC,EAAAA,IAAI,EAAED,KAAK,CAACC;AADuB,CAAZ,CAAxB;;AAKC,OAAO,MAAMC,aAAa,GAAG,MAAM;AAEjCC,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,SAAQC,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAC,gCAAD,CAAL,CAAwCC,IAAxC,CAA6CC,QAAQ,IAAI;AACvD,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAFD,EAEGF,IAFH,CAEQG,YAAY,IAAI;AACtBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACAN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,cAAR;AAAwBM,QAAAA,QAAQ,EAAED;AAAlC,OAAD,CAAR;AACD,KALD;AAMD,GARD;AASD,CAZM;AAcP,OAAO,MAAME,aAAa,GAAG,MAAM;AACjCV,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,MAAIJ,KAAK,GAAG;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAZ;AAEA,MAAIa,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAFE;AAMXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAerB,eAAe,CAACC,KAAD,CAA9B;AANK,GAAb;AASA,SAAQK,QAAD,IAAc;AACnBA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACAC,IAAAA,KAAK,CAAC,gCAAD,EAAmCO,MAAnC,CAAL,CAAgDN,IAAhD,CAAqDC,QAAQ,IAAI;AAC/D,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAFD,EAEGF,IAFH,CAEQG,YAAY,IAAI;AACtBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACAN,MAAAA,QAAQ,CAAC;AAAEC,QAAAA,IAAI,EAAE,cAAR;AAAwBM,QAAAA,QAAQ,EAAED;AAAlC,OAAD,CAAR;AACD,KALD;AAMD,GARD;AASD,CAtBM;AAwBP,OAAO,MAAMU,aAAa,GAAE,MAAM;AAChClB,EAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACA,MAAIJ,KAAK,GAAG;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAZ;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AAEA,MAAIc,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE;AAFD,KAFE;AAMXC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAerB,eAAe,CAACC,KAAD,CAA9B;AANK,GAAb;AASA,SAAQK,QAAD,IAAc;AAEnBE,IAAAA,KAAK,CAAC,gCAAD,EAAmCO,MAAnC,CAAL,CAAgDN,IAAhD,CAAqDC,QAAQ,IAAI;AAC/D,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAFD,EAEGF,IAFH,CAEQG,YAAY,IAAI;AACtBR,MAAAA,OAAO,CAACC,GAAR,CAAYO,YAAZ;AACD,KAJD;AAKD,GAPD;AAQD,CAtBM;AAuBT","sourcesContent":["\n/*\nexport const fetchAccounts = () => {\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_ACCOUNTS'})\n      fetch('https://localhost:4000/accounts').then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON.json })\n      })\n    }\n  }\n  */\n\n\n const accountTemplate = (state) => ({\n  name: state.name\n\n});\n\n  export const fetchAccounts = () => {\n\n    console.log(\"HI\")\n    return (dispatch) => {\n      dispatch({ type: 'LOADING_ACCOUNTS'})\n      fetch('http://localhost:4000/accounts').then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        console.log(responseJSON)\n        dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON })\n      })\n    }\n  }\n\n  export const createAccount = () => {\n    console.log(\"HI\")\n    let state = {name:\"chris\"}\n\n    let header = {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(accountTemplate(state)),\n    };\n\n    return (dispatch) => {\n      dispatch({ type: 'CREATE_ACCOUNT'})\n      fetch('http://localhost:4000/accounts', header).then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        console.log(responseJSON)\n        dispatch({ type: 'ADD_ACCOUNTS', accounts: responseJSON })\n      })\n    }\n  }\n\n  export const createCounter= () => {\n    console.log(\"HI\")\n    let state = {name:\"chris2\"}\n    console.log(state)\n\n    let header = {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(accountTemplate(state)),\n    };\n\n    return (dispatch) => {\n\n      fetch('http://localhost:4000/counters', header).then(response => {\n        return response.json()\n      }).then(responseJSON => {\n        console.log(responseJSON)\n      })\n    }\n  }\n/*\n  export const createUser = (state) => {\n    let configurationObject = {\n      method: \"Post\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n      body: JSON.stringify(_userObject(state)),\n    };\n    return async (dispatch) => {\n      const res = await fetch(BASEURL + \"sign_up\", configurationObject);\n      const json = await res.json();\n      if (json.error) {\n        throw new Error(json.error + \" \" + json.message);\n      }\n      localStorage.setItem(\"token\", json.jwt);\n      dispatch({\n        type: \"CREATE_USER\",\n        payload: json.user,\n      });\n    };\n  };\n  */"]},"metadata":{},"sourceType":"module"}