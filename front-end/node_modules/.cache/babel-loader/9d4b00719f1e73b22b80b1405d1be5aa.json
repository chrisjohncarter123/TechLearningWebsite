{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducer from './reducers/reducer';\nimport { combineReducers } from \"redux\";\nimport counterReducer from \"./counterReducer\";\nimport astronautsReducer from \"./reducers/astronautsReducer\";\nimport catsReducer from \"./catsReducer\";\nimport thunk from \"redux-thunk\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css'; //import { fetchAstronauts } from 'actions/fetchAstronauts'\n\nimport App from './components/app';\nimport { addUser } from './actions'; //import rootReducer from './reducers/rootReducer'\n//const persistedState = loadState();\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  astronauts: astronautsReducer,\n  cats: catsReducer\n});\nconst store = createStore(rootReducer, applyMiddleware(thunk)); //store.dispatch(addUser(\"312312321331\", \"Carter\"))\n\nconsole.log(store.getState());\nstore.subscribe(() => {\n  console.log(\"subscription\");\n});\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }\n})), document.getElementById('container')); //,document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/index.js"],"names":["React","ReactDOM","Provider","createStore","applyMiddleware","reducer","combineReducers","counterReducer","astronautsReducer","catsReducer","thunk","serviceWorker","App","addUser","rootReducer","counter","astronauts","cats","store","console","log","getState","subscribe","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,OAAP,MAAoB,oBAApB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,iBAAP,MAA8B,8BAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,kCAAP;AACA,OAAO,mCAAP,C,CACA;;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,SAASC,OAAT,QAAwB,WAAxB,C,CAGA;AAGA;;AAEA,MAAMC,WAAW,GAAGR,eAAe,CAAC;AAClCS,EAAAA,OAAO,EAAER,cADyB;AAElCS,EAAAA,UAAU,EAAER,iBAFsB;AAGlCS,EAAAA,IAAI,EAAER;AAH4B,CAAD,CAAnC;AAOA,MAAMS,KAAK,GAAGf,WAAW,CAACW,WAAD,EAAcV,eAAe,CAACM,KAAD,CAA7B,CAAzB,C,CAEA;;AAEAS,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAN,EAAZ;AAEAH,KAAK,CAACI,SAAN,CAAgB,MAAM;AAEpBH,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,CAHD;AAMAnB,QAAQ,CAACsB,MAAT,eACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEL,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADJ,EAGiBM,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAHjB,E,CAKE;AAEF;AACA;AACA;;AACAd,aAAa,CAACe,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from \"redux\";\nimport reducer from './reducers/reducer';\nimport { combineReducers } from \"redux\";\nimport counterReducer from \"./counterReducer\";\nimport astronautsReducer from \"./reducers/astronautsReducer\";\nimport catsReducer from \"./catsReducer\"\nimport thunk from \"redux-thunk\";\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n//import { fetchAstronauts } from 'actions/fetchAstronauts'\n\nimport App from './components/app'\n\nimport { addUser } from './actions'\n\n\n//import rootReducer from './reducers/rootReducer'\n \n\n//const persistedState = loadState();\n\nconst rootReducer = combineReducers({\n  counter: counterReducer,\n  astronauts: astronautsReducer,\n  cats: catsReducer\n});\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\n//store.dispatch(addUser(\"312312321331\", \"Carter\"))\n\nconsole.log(store.getState());\n\nstore.subscribe(() => {\n  \n  console.log(\"subscription\")\n});\n\n\nReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>, document.getElementById('container')\n  )\n  //,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}