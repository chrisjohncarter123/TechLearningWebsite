{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\nimport App from './components/app';\nimport { addUser } from './actions';\nstore.dispatch(addUser(\"312312321331\", \"Carter\"));\nconsole.log(store.getState());\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState, applyMiddleware(thunk));\nstore.subscribe(() => {\n  saveState(store.getState());\n});\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }\n})), document.getElementById('root')); // If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\nserviceWorker.unregister();","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/index.js"],"names":["React","ReactDOM","Provider","serviceWorker","App","addUser","store","dispatch","console","log","getState","persistedState","loadState","createStore","rootReducer","applyMiddleware","thunk","subscribe","saveState","render","document","getElementById","unregister"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAO,aAAP;AACA,OAAO,KAAKC,aAAZ,MAA+B,iBAA/B;AACA,OAAO,kCAAP;AACA,OAAO,mCAAP;AAEA,OAAOC,GAAP,MAAgB,kBAAhB;AAEA,SAASC,OAAT,QAAwB,WAAxB;AAEAC,KAAK,CAACC,QAAN,CAAeF,OAAO,CAAC,cAAD,EAAiB,QAAjB,CAAtB;AAEAG,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,QAAN,EAAZ;AAEA,MAAMC,cAAc,GAAGC,SAAS,EAAhC;AACA,MAAMN,KAAK,GAAGO,WAAW,CAACC,WAAD,EAAcH,cAAd,EAA8BI,eAAe,CAACC,KAAD,CAA7C,CAAzB;AAEAV,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpBC,EAAAA,SAAS,CAACZ,KAAK,CAACI,QAAN,EAAD,CAAT;AACD,CAFD;AAMAT,QAAQ,CAACkB,MAAT,eACI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEb,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADJ,EAKEc,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CALF,E,CAQA;AACA;AACA;;AACAlB,aAAa,CAACmB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'font-awesome/css/font-awesome.css';\n\nimport App from './components/app'\n\nimport { addUser } from './actions'\n\nstore.dispatch(addUser(\"312312321331\", \"Carter\"))\n\nconsole.log(store.getState());\n\nconst persistedState = loadState();\nconst store = createStore(rootReducer, persistedState, applyMiddleware(thunk));\n\nstore.subscribe(() => {\n  saveState(store.getState());\n});\n\n\n\nReactDOM.render((\n    <Provider store={store}>\n      <App />\n    </Provider>\n  ),\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}