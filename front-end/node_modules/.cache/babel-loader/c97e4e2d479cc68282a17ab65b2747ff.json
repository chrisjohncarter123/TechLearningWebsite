{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/home.jsx\";\nimport React, { Component } from 'react';\nimport Account from './account';\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter, createTransaction } from '../actions/fetchAccounts';\nimport { fetchCats } from '../actions/fetchCats';\nimport CreateAccountForm from './createAccountForm';\nimport ContentHeader from './contentHeader';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleCreateAccount = () => {\n      this.props.createAccount({\n        name: \"new name\"\n      });\n      this.props.fetchAccounts();\n      this.render();\n    };\n\n    this.state = {\n      new_account_name: '',\n      transaction_from: '',\n      transaction_to: '',\n      cash: ''\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        new_account_name: event.target.value\n      });\n    };\n\n    this.handleAccountFromChange = event => {\n      this.setState({\n        transaction_from: event.target.value\n      });\n    };\n\n    this.handleAccountToChange = event => {\n      this.setState({\n        transaction_to: event.target.value\n      });\n    };\n\n    this.handleCashChange = event => {\n      this.setState({\n        cash: event.target.value\n      });\n    };\n\n    this.handleCreateAccountSubmit = event => {\n      event.preventDefault(); //this.props.dispatch({ type: 'ADD_TODO', payload: this.state });\n\n      console.log(this.state);\n      this.props.createAccount({\n        name: this.state.new_account_name\n      });\n      this.props.fetchAccounts();\n    };\n\n    this.handleCreateTransactionSubmit = event => {\n      event.preventDefault(); //this.props.dispatch({ type: 'ADD_TODO', payload: this.state });\n\n      console.log(this.state);\n      this.props.createTransaction({\n        account_from: this.state.transaction_from,\n        account_to: this.state.transaction_to,\n        cash: this.state.cash\n      });\n      this.props.fetchAccounts();\n    };\n  }\n\n  /*\n  handleOnClick = () => {\n    console.log(\"handleOnClicks\")\n    \n    this.props.fetchAccounts()\n    \n    console.log(this.props)\n    \n  }\n  */\n  componentDidMount() {\n    this.props.fetchAccounts();\n  }\n\n  render() {\n    console.log(\"Props \"); // log will fire every time App renders\n\n    console.log(this.props.accounts.accounts);\n    let accounts = \"\";\n\n    if (this.props.accounts != undefined) {\n      accounts = this.props.accounts.accounts; // console.log(accounts[1])\n\n      accounts = this.props.accounts.accounts.map(account => /*#__PURE__*/React.createElement(\"div\", {\n        key: account.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 62\n        }\n      }, /*#__PURE__*/React.createElement(Account, {\n        name: account.name,\n        cash: account.cash,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 84\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 134\n        }\n      })));\n    } else {\n      accounts = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 18\n        }\n      }, \"Loading ...\");\n    }\n\n    let divStyle = {\n      color: 'black',\n      border: 'solid 2px black',\n      padding: '15px'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ContentHeader, {\n      title: \"Accounts\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, \"Create New Account:\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.handleCreateAccountSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Account Name:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: event => this.handleChange(event),\n      placeholder: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Bank Accounts:\"), accounts));\n  }\n\n}\n\nHome.contextType = StoreContext;\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.accounts,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAccounts: () => dispatch(fetchAccounts()),\n    createAccount: state => dispatch(createAccount(state))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/home.jsx"],"names":["React","Component","Account","StoreContext","connect","fetchAccounts","createAccount","createCounter","createTransaction","fetchCats","CreateAccountForm","ContentHeader","Home","handleCreateAccount","props","name","render","state","new_account_name","transaction_from","transaction_to","cash","handleChange","event","setState","target","value","handleAccountFromChange","handleAccountToChange","handleCashChange","handleCreateAccountSubmit","preventDefault","console","log","handleCreateTransactionSubmit","account_from","account_to","componentDidMount","accounts","undefined","map","account","id","divStyle","color","border","padding","contextType","mapStateToProps","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Account from './account'\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter, createTransaction } from '../actions/fetchAccounts'\nimport { fetchCats } from '../actions/fetchCats'\nimport  CreateAccountForm  from './createAccountForm'\nimport ContentHeader from './contentHeader';\n\nclass Home extends Component{\n\n  static contextType = StoreContext;\n\n  /*\n  handleOnClick = () => {\n    console.log(\"handleOnClicks\")\n    \n    this.props.fetchAccounts()\n    \n    console.log(this.props)\n    \n}\n*/\n\n  componentDidMount() {\n    this.props.fetchAccounts()\n   \n  }\n  handleCreateAccount = () => {\n    this.props.createAccount({name: \"new name\"})\n    this.props.fetchAccounts()\n    this.render()\n\n  }\n\n  state = {\n    new_account_name : '',\n    transaction_from : '',\n    transaction_to : '',\n    cash : ''\n\n  };\n \n  handleChange = event => {\n    this.setState({\n      new_account_name: event.target.value\n    });\n  };\n\n  handleAccountFromChange = event => {\n    this.setState({\n      transaction_from: event.target.value\n    });\n  };\n\n  handleAccountToChange = event => {\n    this.setState({\n      transaction_to: event.target.value\n    });\n  };\n\n  handleCashChange = event => {\n    this.setState({\n      cash: event.target.value\n    });\n  };\n \n  handleCreateAccountSubmit = event => {\n    event.preventDefault();\n    //this.props.dispatch({ type: 'ADD_TODO', payload: this.state });\n    console.log(this.state)\n    this.props.createAccount({name: this.state.new_account_name})\n    this.props.fetchAccounts()\n\n  };\n\n  handleCreateTransactionSubmit = event => {\n    event.preventDefault();\n    //this.props.dispatch({ type: 'ADD_TODO', payload: this.state });\n    console.log(this.state)\n    this.props.createTransaction(\n      {account_from: this.state.transaction_from, account_to: this.state.transaction_to, cash:this.state.cash})\n    this.props.fetchAccounts()\n\n  };\n\n  render() {\n    console.log(\"Props \" ) // log will fire every time App renders\n    console.log(this.props.accounts.accounts)\n\n    let accounts = \"\"\n\n    if(this.props.accounts != undefined){\n      accounts = this.props.accounts.accounts\n     // console.log(accounts[1])\n      accounts = this.props.accounts.accounts.map(account => <div key={account.id}><Account name={account.name} cash={account.cash}/><br /></div>);\n    }\n    else{\n      accounts = <div>Loading ...</div>\n    }\n\n    let divStyle = {\n      color: 'black',\n      border: 'solid 2px black',\n      padding: '15px'\n    };\n\n    return (\n      \n          <div className=\"Home\">\n\n          <ContentHeader title=\"Accounts\"/>\n\n          <div  style={divStyle}>\n            <h3>Create New Account:</h3>\n            <form onSubmit={event => this.handleCreateAccountSubmit(event)}>\n              <p>\n                <label>Account Name:</label>\n                <input\n                  type=\"text\"\n                  onChange={event => this.handleChange(event)}\n                  placeholder={\"name\"}\n                />\n              </p>\n              <input type=\"submit\" />\n            </form>\n          </div>\n\n          <br />\n            \n          <div  style={divStyle}>\n            <h3>Bank Accounts:</h3>\n              {accounts}\n            </div>\n          </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    accounts: state.accounts,\n    loading: state.loading\n  }\n}\n \nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchAccounts: () => dispatch(fetchAccounts()),\n    createAccount: (state) => dispatch(createAccount(state))\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n"]},"metadata":{},"sourceType":"module"}