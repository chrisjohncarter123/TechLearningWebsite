{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/home.jsx\";\nimport React, { Component } from 'react';\nimport Account from './account';\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter } from '../actions/fetchAccounts';\nimport { fetchCats } from '../actions/fetchCats';\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnClick = () => {\n      console.log(\"handleOnClicks\");\n      this.props.fetchAccounts();\n      this.props.fetchCats();\n      console.log(this.props);\n    };\n\n    this.handleCreateCounter = () => {\n      console.log(\"handleCreateCounter\");\n      this.props.createCounter();\n      console.log(this.props);\n    };\n\n    this.handleCreateCounter = () => {\n      console.log(\"handleCreateCounter\");\n      this.props.createCounter();\n      console.log(this.props);\n    };\n  }\n\n  componentDidMount() {\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        counter: {\n          name: 'React POnjnnjnST Request Example'\n        }\n      })\n    };\n    fetch('http://localhost:4000/counters', requestOptions).then(response => response.json()).then(data => console.log(data));\n  }\n\n  render() {\n    console.log(\"Props \"); // log will fire every time App renders\n\n    console.log(this.props.accounts.accounts);\n    let accounts = \"\";\n\n    if (this.props.accounts != undefined) {\n      accounts = this.props.accounts.accounts; // console.log(accounts[1])\n\n      accounts = this.props.accounts.accounts.map(account => /*#__PURE__*/React.createElement(\"div\", {\n        key: account.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 62\n        }\n      }, /*#__PURE__*/React.createElement(Account, {\n        name: account.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 84\n        }\n      })));\n    } else {\n      accounts = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 18\n        }\n      }, \"Loading ...\");\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"Bank Accounts:\"), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleOnClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }\n    }, \"Get Accounts\")), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleCreateCounter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"Create Counter\")), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: this.handleCreateAccount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Create Account\")), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"AddBank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }\n    }, \"Add Bank\")), accounts);\n  }\n\n}\n\nHome.contextType = StoreContext;\n\nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    accounts: state.accounts,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats()),\n    fetchAccounts: () => dispatch(fetchAccounts()),\n    createAccount: state => dispatch(createAccount(state)),\n    createCounter: () => dispatch(createCounter())\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/home.jsx"],"names":["React","Component","Account","StoreContext","connect","fetchAccounts","createAccount","createCounter","fetchCats","Home","handleOnClick","console","log","props","handleCreateCounter","componentDidMount","requestOptions","method","headers","body","JSON","stringify","counter","name","fetch","then","response","json","data","render","accounts","undefined","map","account","id","handleCreateAccount","contextType","mapStateToProps","state","catPics","cats","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Account from './account'\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter } from '../actions/fetchAccounts'\nimport { fetchCats } from '../actions/fetchCats'\n\nclass Home extends Component{\n\n  static contextType = StoreContext;\n\n  handleOnClick = () => {\n    console.log(\"handleOnClicks\")\n    \n    this.props.fetchAccounts()\n    this.props.fetchCats()\n    \n    console.log(this.props)\n    \n}\n\n  componentDidMount() {\n    // Simple POST request with a JSON body using fetch\n    const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({counter:{ name: 'React POnjnnjnST Request Example' }})\n    };\n    fetch('http://localhost:4000/counters', requestOptions)\n        .then(response => response.json())\n        .then(data => console.log(data));\n  }\n\n  handleCreateCounter = () => {\n    console.log(\"handleCreateCounter\")\n\n  \n    this.props.createCounter()\n\n    console.log(this.props)\n\n  }\n\n  handleCreateCounter = () => {\n    console.log(\"handleCreateCounter\")\n\n  \n    this.props.createCounter()\n\n    console.log(this.props)\n\n  }\n\n  render() {\n    console.log(\"Props \" ) // log will fire every time App renders\n    console.log(this.props.accounts.accounts)\n\n    let accounts = \"\"\n\n    if(this.props.accounts != undefined){\n      accounts = this.props.accounts.accounts\n     // console.log(accounts[1])\n      accounts = this.props.accounts.accounts.map(account => <div key={account.id}><Account name={account.name}/></div>);\n    }\n    else{\n      accounts = <div>Loading ...</div>\n    }\n\n    return (\n          <div className=\"Home\">\n            \n            <h2>Bank Accounts:</h2>\n\n            <button><span onClick={this.handleOnClick}>Get Accounts</span></button>\n\n            <button><span onClick={this.handleCreateCounter}>Create Counter</span></button>\n\n            <button><span onClick={this.handleCreateAccount}>Create Account</span></button>\n\n            <p><a href=\"AddBank\">Add Bank</a></p>\n\n            {accounts}\n            \n          </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    accounts: state.accounts,\n    loading: state.loading\n  }\n}\n \nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats()),\n    fetchAccounts: () => dispatch(fetchAccounts()),\n    createAccount: (state) => dispatch(createAccount(state)),\n    createCounter: () => dispatch(createCounter())\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n"]},"metadata":{},"sourceType":"module"}