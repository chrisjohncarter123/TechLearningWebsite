{"ast":null,"code":"var _jsxFileName = \"/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/transactionsList.jsx\";\nimport React, { Component } from 'react';\nimport Account from './account';\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter, createTransaction } from '../actions/fetchAccounts';\nimport { fetchCats } from '../actions/fetchCats';\nimport CreateAccountForm from './createAccountForm';\nimport ContentHeader from './contentHeader';\n\nclass TransactionsList extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnClick = () => {\n      console.log(\"handleOnClicks\");\n      this.props.fetchAccounts();\n      console.log(this.props);\n    };\n\n    this.handleCreateCounter = () => {\n      this.props.createCounter();\n    };\n\n    this.handleCreateAccount = () => {\n      this.props.createAccount({\n        name: \"new name\"\n      });\n      this.props.fetchAccounts();\n      this.render();\n    };\n\n    this.state = {\n      new_account_name: '',\n      transaction_from: '',\n      transaction_to: '',\n      cash: ''\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        new_account_name: event.target.value\n      });\n    };\n\n    this.handleAccountFromChange = event => {\n      this.setState({\n        transaction_from: event.target.value\n      });\n    };\n\n    this.handleAccountToChange = event => {\n      this.setState({\n        transaction_to: event.target.value\n      });\n    };\n\n    this.handleCashChange = event => {\n      this.setState({\n        cash: event.target.value\n      });\n    };\n\n    this.handleCreateAccountSubmit = event => {\n      event.preventDefault(); //this.props.dispatch({ type: 'ADD_TODO', payload: this.state });\n\n      console.log(this.state);\n      this.props.createAccount({\n        name: this.state.new_account_name\n      });\n      this.props.fetchAccounts();\n    };\n\n    this.handleCreateTransactionSubmit = event => {\n      event.preventDefault(); //this.props.dispatch({ type: 'ADD_TODO', payload: this.state });\n\n      console.log(this.state);\n      this.props.createTransaction({\n        account_from: this.state.transaction_from,\n        account_to: this.state.transaction_to,\n        cash: this.state.cash\n      });\n      this.props.fetchAccounts();\n    };\n  }\n\n  componentDidMount() {\n    this.props.fetchAccounts();\n  }\n\n  render() {\n    console.log(\"Props \"); // log will fire every time App renders\n\n    console.log(this.props.accounts.accounts);\n    let transactions = \"\";\n\n    if (this.props.accounts != undefined) {\n      transactions = this.props.transactions.accounts; // console.log(accounts[1])\n\n      transactions = this.props.transactions.transactions.map(account => /*#__PURE__*/React.createElement(\"div\", {\n        key: account.id,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Account, {\n        name: account.name,\n        cash: account.cash,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 95\n        }\n      }), /*#__PURE__*/React.createElement(\"br\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 145\n        }\n      })));\n    } else {\n      transactions = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 24\n        }\n      }, \"Loading ...\");\n    }\n\n    let divStyle = {\n      color: 'black',\n      border: 'solid 2px black',\n      padding: '15px'\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ContentHeader, {\n      title: \"Transactions\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"Create New Transaction:\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: event => this.handleCreateTransactionSubmit(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, \"Account From:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: event => this.handleAccountFromChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, \"Account To:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: event => this.handleAccountToChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \"Cash Ammount:\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      onChange: event => this.handleCashChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: divStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 13\n      }\n    }, \"All Transactions:\"), transactions));\n  }\n\n}\n\nTransactionsList.contextType = StoreContext;\n\nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    accounts: state.accounts,\n    loading: state.loading\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats()),\n    fetchAccounts: () => dispatch(fetchAccounts()),\n    createAccount: state => dispatch(createAccount(state)),\n    createCounter: () => dispatch(createCounter()),\n    createTransaction: state => dispatch(createTransaction(state))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsList);","map":{"version":3,"sources":["/Users/ChrisJohnCarter/Development/Bank-Hero/front-end/src/components/transactionsList.jsx"],"names":["React","Component","Account","StoreContext","connect","fetchAccounts","createAccount","createCounter","createTransaction","fetchCats","CreateAccountForm","ContentHeader","TransactionsList","handleOnClick","console","log","props","handleCreateCounter","handleCreateAccount","name","render","state","new_account_name","transaction_from","transaction_to","cash","handleChange","event","setState","target","value","handleAccountFromChange","handleAccountToChange","handleCashChange","handleCreateAccountSubmit","preventDefault","handleCreateTransactionSubmit","account_from","account_to","componentDidMount","accounts","transactions","undefined","map","account","id","divStyle","color","border","padding","contextType","mapStateToProps","catPics","cats","loading","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Account from './account'\nimport StoreContext from '../contexts/storeContext';\nimport { connect } from 'react-redux';\nimport { fetchAccounts, createAccount, createCounter, createTransaction } from '../actions/fetchAccounts'\nimport { fetchCats } from '../actions/fetchCats'\nimport  CreateAccountForm  from './createAccountForm'\nimport ContentHeader from './contentHeader';\n\nclass TransactionsList extends Component{\n\n  static contextType = StoreContext;\n\n  handleOnClick = () => {\n    console.log(\"handleOnClicks\")\n    \n    this.props.fetchAccounts()\n    \n    console.log(this.props)\n    \n}\n\n  componentDidMount() {\n    this.props.fetchAccounts()\n\n   \n  }\n\n  handleCreateCounter = () => {\n    this.props.createCounter()\n\n  }\n\n  handleCreateAccount = () => {\n    this.props.createAccount({name: \"new name\"})\n    this.props.fetchAccounts()\n    this.render()\n\n  }\n\n  state = {\n    new_account_name : '',\n    transaction_from : '',\n    transaction_to : '',\n    cash : ''\n\n  };\n \n  handleChange = event => {\n    this.setState({\n      new_account_name: event.target.value\n    });\n  };\n\n  handleAccountFromChange = event => {\n    this.setState({\n      transaction_from: event.target.value\n    });\n  };\n\n  handleAccountToChange = event => {\n    this.setState({\n      transaction_to: event.target.value\n    });\n  };\n\n  handleCashChange = event => {\n    this.setState({\n      cash: event.target.value\n    });\n  };\n \n  handleCreateAccountSubmit = event => {\n    event.preventDefault();\n    //this.props.dispatch({ type: 'ADD_TODO', payload: this.state });\n    console.log(this.state)\n    this.props.createAccount({name: this.state.new_account_name})\n    this.props.fetchAccounts()\n\n  };\n\n  handleCreateTransactionSubmit = event => {\n    event.preventDefault();\n    //this.props.dispatch({ type: 'ADD_TODO', payload: this.state });\n    console.log(this.state)\n    this.props.createTransaction(\n      {account_from: this.state.transaction_from, account_to: this.state.transaction_to, cash:this.state.cash})\n    this.props.fetchAccounts()\n\n  };\n\n  render() {\n    console.log(\"Props \" ) // log will fire every time App renders\n    console.log(this.props.accounts.accounts)\n\n    let transactions = \"\"\n\n    if(this.props.accounts != undefined){\n        transactions = this.props.transactions.accounts\n     // console.log(accounts[1])\n     transactions = this.props.transactions.transactions.map(account => <div key={account.id}><Account name={account.name} cash={account.cash}/><br /></div>);\n    }\n    else{\n        transactions = <div>Loading ...</div>\n    }\n\n    let divStyle = {\n      color: 'black',\n      border: 'solid 2px black',\n      padding: '15px'\n    };\n\n    return (\n      \n          <div className=\"Home\">\n            <ContentHeader title=\"Transactions\"/>\n\n          <div  style={divStyle}>\n            <h3>Create New Transaction:</h3>\n            <form onSubmit={event => this.handleCreateTransactionSubmit(event)}>\n              <p>\n                <label>Account From:</label>\n                <input\n                  type=\"text\"\n                  onChange={event => this.handleAccountFromChange(event)}\n                />\n              </p>\n\n              <p>\n                <label>Account To:</label>\n                <input\n                  type=\"text\"\n                  onChange={event => this.handleAccountToChange(event)}\n                />\n              </p>\n\n              <p>\n                <label>Cash Ammount:</label>\n                <input\n                  type=\"text\"\n                  onChange={event => this.handleCashChange(event)}\n                />\n              </p>\n              <input type=\"submit\" />\n            </form>\n          </div>\n\n          <br />\n\n            \n          <div  style={divStyle}>\n            <h3>All Transactions:</h3>\n\n\n            {transactions}\n            </div>\n\n        \n            \n          </div>\n    );\n  }\n}\n\n\nconst mapStateToProps = state => {\n  return {\n    catPics: state.cats,\n    accounts: state.accounts,\n    loading: state.loading\n  }\n}\n \nconst mapDispatchToProps = dispatch => {\n  return {\n    fetchCats: () => dispatch(fetchCats()),\n    fetchAccounts: () => dispatch(fetchAccounts()),\n    createAccount: (state) => dispatch(createAccount(state)),\n    createCounter: () => dispatch(createCounter()),\n    createTransaction: (state) => dispatch(createTransaction(state)),\n  }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TransactionsList)\n"]},"metadata":{},"sourceType":"module"}